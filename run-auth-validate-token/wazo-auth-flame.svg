<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="598" onload="init(evt)" viewBox="0 0 1200 598" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="598" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">py-spy</text><text id="details" x="10" y="581.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="581.00"> </text><svg id="frames" x="10" width="1180"><g><title>load_on_pk_identity (sqlalchemy/orm/loading.py:224) (1 samples, 2.27%)</title><rect x="0.0000%" y="388" width="2.2727%" height="15" fill="rgb(227,0,7)"/><text x="0.2500%" y="398.50">l..</text></g><g><title>_clone (sqlalchemy/orm/query.py:520) (1 samples, 2.27%)</title><rect x="0.0000%" y="404" width="2.2727%" height="15" fill="rgb(217,0,24)"/><text x="0.2500%" y="414.50">_..</text></g><g><title>get (wazo_auth/database/queries/token.py:45) (4 samples, 9.09%)</title><rect x="0.0000%" y="340" width="9.0909%" height="15" fill="rgb(221,193,54)"/><text x="0.2500%" y="350.50">get (wazo_aut..</text></g><g><title>get (sqlalchemy/orm/query.py:936) (4 samples, 9.09%)</title><rect x="0.0000%" y="356" width="9.0909%" height="15" fill="rgb(248,212,6)"/><text x="0.2500%" y="366.50">get (sqlalche..</text></g><g><title>_get_impl (sqlalchemy/orm/query.py:1026) (4 samples, 9.09%)</title><rect x="0.0000%" y="372" width="9.0909%" height="15" fill="rgb(208,68,35)"/><text x="0.2500%" y="382.50">_get_impl (sq..</text></g><g><title>load_on_pk_identity (sqlalchemy/orm/loading.py:282) (3 samples, 6.82%)</title><rect x="2.2727%" y="388" width="6.8182%" height="15" fill="rgb(232,128,0)"/><text x="2.5227%" y="398.50">load_on_p..</text></g><g><title>one (sqlalchemy/orm/query.py:3039) (3 samples, 6.82%)</title><rect x="2.2727%" y="404" width="6.8182%" height="15" fill="rgb(207,160,47)"/><text x="2.5227%" y="414.50">one (sqla..</text></g><g><title>one_or_none (sqlalchemy/orm/query.py:3008) (3 samples, 6.82%)</title><rect x="2.2727%" y="420" width="6.8182%" height="15" fill="rgb(228,23,34)"/><text x="2.5227%" y="430.50">one_or_no..</text></g><g><title>__iter__ (sqlalchemy/orm/query.py:3081) (3 samples, 6.82%)</title><rect x="2.2727%" y="436" width="6.8182%" height="15" fill="rgb(218,30,26)"/><text x="2.5227%" y="446.50">__iter__ ..</text></g><g><title>_execute_and_instances (sqlalchemy/orm/query.py:3106) (3 samples, 6.82%)</title><rect x="2.2727%" y="452" width="6.8182%" height="15" fill="rgb(220,122,19)"/><text x="2.5227%" y="462.50">_execute_..</text></g><g><title>execute (sqlalchemy/engine/base.py:980) (3 samples, 6.82%)</title><rect x="2.2727%" y="468" width="6.8182%" height="15" fill="rgb(250,228,42)"/><text x="2.5227%" y="478.50">execute (..</text></g><g><title>_execute_on_connection (sqlalchemy/sql/elements.py:273) (3 samples, 6.82%)</title><rect x="2.2727%" y="484" width="6.8182%" height="15" fill="rgb(240,193,28)"/><text x="2.5227%" y="494.50">_execute_..</text></g><g><title>_execute_clauseelement (sqlalchemy/engine/base.py:1099) (3 samples, 6.82%)</title><rect x="2.2727%" y="500" width="6.8182%" height="15" fill="rgb(216,20,37)"/><text x="2.5227%" y="510.50">_execute_..</text></g><g><title>_execute_context (sqlalchemy/engine/base.py:1236) (3 samples, 6.82%)</title><rect x="2.2727%" y="516" width="6.8182%" height="15" fill="rgb(206,188,39)"/><text x="2.5227%" y="526.50">_execute_..</text></g><g><title>do_execute (sqlalchemy/engine/default.py:536) (3 samples, 6.82%)</title><rect x="2.2727%" y="532" width="6.8182%" height="15" fill="rgb(217,207,13)"/><text x="2.5227%" y="542.50">do_execut..</text></g><g><title>__iter__ (sqlalchemy/ext/baked.py:380) (3 samples, 6.82%)</title><rect x="9.0909%" y="452" width="6.8182%" height="15" fill="rgb(231,73,38)"/><text x="9.3409%" y="462.50">__iter__ ..</text></g><g><title>_execute_and_instances (sqlalchemy/orm/query.py:3106) (3 samples, 6.82%)</title><rect x="9.0909%" y="468" width="6.8182%" height="15" fill="rgb(225,20,46)"/><text x="9.3409%" y="478.50">_execute_..</text></g><g><title>execute (sqlalchemy/engine/base.py:980) (3 samples, 6.82%)</title><rect x="9.0909%" y="484" width="6.8182%" height="15" fill="rgb(210,31,41)"/><text x="9.3409%" y="494.50">execute (..</text></g><g><title>_execute_on_connection (sqlalchemy/sql/elements.py:273) (3 samples, 6.82%)</title><rect x="9.0909%" y="500" width="6.8182%" height="15" fill="rgb(221,200,47)"/><text x="9.3409%" y="510.50">_execute_..</text></g><g><title>_execute_clauseelement (sqlalchemy/engine/base.py:1099) (3 samples, 6.82%)</title><rect x="9.0909%" y="516" width="6.8182%" height="15" fill="rgb(226,26,5)"/><text x="9.3409%" y="526.50">_execute_..</text></g><g><title>_execute_context (sqlalchemy/engine/base.py:1236) (3 samples, 6.82%)</title><rect x="9.0909%" y="532" width="6.8182%" height="15" fill="rgb(249,33,26)"/><text x="9.3409%" y="542.50">_execute_..</text></g><g><title>do_execute (sqlalchemy/engine/default.py:536) (3 samples, 6.82%)</title><rect x="9.0909%" y="548" width="6.8182%" height="15" fill="rgb(235,183,28)"/><text x="9.3409%" y="558.50">do_execut..</text></g><g><title>_instance (sqlalchemy/orm/loading.py:508) (4 samples, 9.09%)</title><rect x="15.9091%" y="484" width="9.0909%" height="15" fill="rgb(221,5,38)"/><text x="16.1591%" y="494.50">_instance (sq..</text></g><g><title>_instance (sqlalchemy/orm/loading.py:538) (1 samples, 2.27%)</title><rect x="25.0000%" y="484" width="2.2727%" height="15" fill="rgb(247,18,42)"/><text x="25.2500%" y="494.50">_..</text></g><g><title>new_instance (sqlalchemy/orm/instrumentation.py:376) (1 samples, 2.27%)</title><rect x="25.0000%" y="500" width="2.2727%" height="15" fill="rgb(241,131,45)"/><text x="25.2500%" y="510.50">n..</text></g><g><title>set (&lt;string&gt;:1) (1 samples, 2.27%)</title><rect x="25.0000%" y="516" width="2.2727%" height="15" fill="rgb(249,31,29)"/><text x="25.2500%" y="526.50">s..</text></g><g><title>_instance (sqlalchemy/orm/loading.py:547) (1 samples, 2.27%)</title><rect x="27.2727%" y="484" width="2.2727%" height="15" fill="rgb(225,111,53)"/><text x="27.5227%" y="494.50">_..</text></g><g><title>_add_unpresent (sqlalchemy/orm/identity.py:160) (1 samples, 2.27%)</title><rect x="27.2727%" y="500" width="2.2727%" height="15" fill="rgb(238,160,17)"/><text x="27.5227%" y="510.50">_..</text></g><g><title>_populate_full (sqlalchemy/orm/loading.py:692) (3 samples, 6.82%)</title><rect x="29.5455%" y="500" width="6.8182%" height="15" fill="rgb(214,148,48)"/><text x="29.7955%" y="510.50">_populate..</text></g><g><title>__del__ (_pyio.py:383) (1 samples, 2.27%)</title><rect x="34.0909%" y="516" width="2.2727%" height="15" fill="rgb(232,36,49)"/><text x="34.3409%" y="526.50">_..</text></g><g><title>close (_pyio.py:1268) (1 samples, 2.27%)</title><rect x="34.0909%" y="532" width="2.2727%" height="15" fill="rgb(209,103,24)"/><text x="34.3409%" y="542.50">c..</text></g><g><title>get (wazo_auth/database/queries/token.py:54) (14 samples, 31.82%)</title><rect x="9.0909%" y="340" width="31.8182%" height="15" fill="rgb(229,88,8)"/><text x="9.3409%" y="350.50">get (wazo_auth/database/queries/token.py:54)</text></g><g><title>__get__ (sqlalchemy/orm/attributes.py:275) (14 samples, 31.82%)</title><rect x="9.0909%" y="356" width="31.8182%" height="15" fill="rgb(213,181,19)"/><text x="9.3409%" y="366.50">__get__ (sqlalchemy/orm/attributes.py:275)</text></g><g><title>get (sqlalchemy/orm/attributes.py:674) (14 samples, 31.82%)</title><rect x="9.0909%" y="372" width="31.8182%" height="15" fill="rgb(254,191,54)"/><text x="9.3409%" y="382.50">get (sqlalchemy/orm/attributes.py:674)</text></g><g><title>_load_for_state (sqlalchemy/orm/strategies.py:708) (14 samples, 31.82%)</title><rect x="9.0909%" y="388" width="31.8182%" height="15" fill="rgb(241,83,37)"/><text x="9.3409%" y="398.50">_load_for_state (sqlalchemy/orm/strategies.py:708)</text></g><g><title>&lt;lambda&gt; (&lt;string&gt;:1) (14 samples, 31.82%)</title><rect x="9.0909%" y="404" width="31.8182%" height="15" fill="rgb(233,36,39)"/><text x="9.3409%" y="414.50">&lt;lambda&gt; (&lt;string&gt;:1)</text></g><g><title>_emit_lazyload (sqlalchemy/orm/strategies.py:850) (14 samples, 31.82%)</title><rect x="9.0909%" y="420" width="31.8182%" height="15" fill="rgb(226,3,54)"/><text x="9.3409%" y="430.50">_emit_lazyload (sqlalchemy/orm/strategies.py:850)</text></g><g><title>all (sqlalchemy/ext/baked.py:477) (14 samples, 31.82%)</title><rect x="9.0909%" y="436" width="31.8182%" height="15" fill="rgb(245,192,40)"/><text x="9.3409%" y="446.50">all (sqlalchemy/ext/baked.py:477)</text></g><g><title>instances (sqlalchemy/orm/loading.py:85) (11 samples, 25.00%)</title><rect x="15.9091%" y="452" width="25.0000%" height="15" fill="rgb(238,167,29)"/><text x="16.1591%" y="462.50">instances (sqlalchemy/orm/loading.py:85)</text></g><g><title>&lt;listcomp&gt; (sqlalchemy/orm/loading.py:85) (11 samples, 25.00%)</title><rect x="15.9091%" y="468" width="25.0000%" height="15" fill="rgb(232,182,51)"/><text x="16.1591%" y="478.50">&lt;listcomp&gt; (sqlalchemy/orm/loading.py:85)</text></g><g><title>_instance (sqlalchemy/orm/loading.py:572) (5 samples, 11.36%)</title><rect x="29.5455%" y="484" width="11.3636%" height="15" fill="rgb(231,60,39)"/><text x="29.7955%" y="494.50">_instance (sqlalc..</text></g><g><title>_populate_full (sqlalchemy/orm/loading.py:706) (2 samples, 4.55%)</title><rect x="36.3636%" y="500" width="4.5455%" height="15" fill="rgb(208,69,12)"/><text x="36.6136%" y="510.50">_popu..</text></g><g><title>commit (sqlalchemy/orm/session.py:491) (15 samples, 34.09%)</title><rect x="40.9091%" y="404" width="34.0909%" height="15" fill="rgb(235,93,37)"/><text x="41.1591%" y="414.50">commit (sqlalchemy/orm/session.py:491)</text></g><g><title>commit (sqlalchemy/engine/base.py:1708) (15 samples, 34.09%)</title><rect x="40.9091%" y="420" width="34.0909%" height="15" fill="rgb(213,116,39)"/><text x="41.1591%" y="430.50">commit (sqlalchemy/engine/base.py:1708)</text></g><g><title>_do_commit (sqlalchemy/engine/base.py:1739) (15 samples, 34.09%)</title><rect x="40.9091%" y="436" width="34.0909%" height="15" fill="rgb(222,207,29)"/><text x="41.1591%" y="446.50">_do_commit (sqlalchemy/engine/base.py:1739)</text></g><g><title>_commit_impl (sqlalchemy/engine/base.py:753) (15 samples, 34.09%)</title><rect x="40.9091%" y="452" width="34.0909%" height="15" fill="rgb(206,96,30)"/><text x="41.1591%" y="462.50">_commit_impl (sqlalchemy/engine/base.py:753)</text></g><g><title>do_commit (sqlalchemy/engine/default.py:489) (15 samples, 34.09%)</title><rect x="40.9091%" y="468" width="34.0909%" height="15" fill="rgb(218,138,4)"/><text x="41.1591%" y="478.50">do_commit (sqlalchemy/engine/default.py:489)</text></g><g><title>get (wazo_auth/services/token.py:151) (34 samples, 77.27%)</title><rect x="0.0000%" y="324" width="77.2727%" height="15" fill="rgb(250,191,14)"/><text x="0.2500%" y="334.50">get (wazo_auth/services/token.py:151)</text></g><g><title>get (wazo_auth/database/queries/token.py:61) (16 samples, 36.36%)</title><rect x="40.9091%" y="340" width="36.3636%" height="15" fill="rgb(239,60,40)"/><text x="41.1591%" y="350.50">get (wazo_auth/database/queries/token.py:61)</text></g><g><title>__exit__ (contextlib.py:119) (16 samples, 36.36%)</title><rect x="40.9091%" y="356" width="36.3636%" height="15" fill="rgb(206,27,48)"/><text x="41.1591%" y="366.50">__exit__ (contextlib.py:119)</text></g><g><title>new_session (wazo_auth/database/helpers.py:28) (16 samples, 36.36%)</title><rect x="40.9091%" y="372" width="36.3636%" height="15" fill="rgb(225,35,8)"/><text x="41.1591%" y="382.50">new_session (wazo_auth/database/helpers.py:28)</text></g><g><title>commit (sqlalchemy/orm/session.py:1023) (16 samples, 36.36%)</title><rect x="40.9091%" y="388" width="36.3636%" height="15" fill="rgb(250,213,24)"/><text x="41.1591%" y="398.50">commit (sqlalchemy/orm/session.py:1023)</text></g><g><title>commit (sqlalchemy/orm/session.py:497) (1 samples, 2.27%)</title><rect x="75.0000%" y="404" width="2.2727%" height="15" fill="rgb(247,123,22)"/><text x="75.2500%" y="414.50">c..</text></g><g><title>_remove_snapshot (sqlalchemy/orm/session.py:388) (1 samples, 2.27%)</title><rect x="75.0000%" y="420" width="2.2727%" height="15" fill="rgb(231,138,38)"/><text x="75.2500%" y="430.50">_..</text></g><g><title>_expire (sqlalchemy/orm/state.py:578) (1 samples, 2.27%)</title><rect x="75.0000%" y="436" width="2.2727%" height="15" fill="rgb(231,145,46)"/><text x="75.2500%" y="446.50">_..</text></g><g><title>dispatch_request (flask_restful/__init__.py:573) (35 samples, 79.55%)</title><rect x="0.0000%" y="260" width="79.5455%" height="15" fill="rgb(251,118,11)"/><text x="0.2500%" y="270.50">dispatch_request (flask_restful/__init__.py:573)</text></g><g><title>wrapper (xivo/rest_api_helpers.py:28) (35 samples, 79.55%)</title><rect x="0.0000%" y="276" width="79.5455%" height="15" fill="rgb(217,147,25)"/><text x="0.2500%" y="286.50">wrapper (xivo/rest_api_helpers.py:28)</text></g><g><title>wrapper (wazo_auth/http.py:76) (35 samples, 79.55%)</title><rect x="0.0000%" y="292" width="79.5455%" height="15" fill="rgb(247,81,37)"/><text x="0.2500%" y="302.50">wrapper (wazo_auth/http.py:76)</text></g><g><title>head (wazo_auth/plugins/http/tokens/http.py:188) (35 samples, 79.55%)</title><rect x="0.0000%" y="308" width="79.5455%" height="15" fill="rgb(209,12,38)"/><text x="0.2500%" y="318.50">head (wazo_auth/plugins/http/tokens/http.py:188)</text></g><g><title>to_dict (wazo_auth/token.py:85) (1 samples, 2.27%)</title><rect x="77.2727%" y="324" width="2.2727%" height="15" fill="rgb(227,1,9)"/><text x="77.5227%" y="334.50">t..</text></g><g><title>full_dispatch_request (flask/app.py:1813) (36 samples, 81.82%)</title><rect x="0.0000%" y="196" width="81.8182%" height="15" fill="rgb(248,47,43)"/><text x="0.2500%" y="206.50">full_dispatch_request (flask/app.py:1813)</text></g><g><title>dispatch_request (flask/app.py:1799) (36 samples, 81.82%)</title><rect x="0.0000%" y="212" width="81.8182%" height="15" fill="rgb(221,10,30)"/><text x="0.2500%" y="222.50">dispatch_request (flask/app.py:1799)</text></g><g><title>wrapper (flask_restful/__init__.py:458) (36 samples, 81.82%)</title><rect x="0.0000%" y="228" width="81.8182%" height="15" fill="rgb(210,229,1)"/><text x="0.2500%" y="238.50">wrapper (flask_restful/__init__.py:458)</text></g><g><title>view (flask/views.py:88) (36 samples, 81.82%)</title><rect x="0.0000%" y="244" width="81.8182%" height="15" fill="rgb(222,148,37)"/><text x="0.2500%" y="254.50">view (flask/views.py:88)</text></g><g><title>dispatch_request (flask_restful/__init__.py:581) (1 samples, 2.27%)</title><rect x="79.5455%" y="260" width="2.2727%" height="15" fill="rgb(234,67,33)"/><text x="79.7955%" y="270.50">d..</text></g><g><title>__getattr__ (werkzeug/local.py:347) (1 samples, 2.27%)</title><rect x="79.5455%" y="276" width="2.2727%" height="15" fill="rgb(247,98,35)"/><text x="79.7955%" y="286.50">_..</text></g><g><title>__get__ (werkzeug/utils.py:73) (1 samples, 2.27%)</title><rect x="79.5455%" y="292" width="2.2727%" height="15" fill="rgb(247,138,52)"/><text x="79.7955%" y="302.50">_..</text></g><g><title>accept_mimetypes (werkzeug/wrappers.py:1347) (1 samples, 2.27%)</title><rect x="79.5455%" y="308" width="2.2727%" height="15" fill="rgb(213,79,30)"/><text x="79.7955%" y="318.50">a..</text></g><g><title>emit (logging/__init__.py:1034) (1 samples, 2.27%)</title><rect x="81.8182%" y="356" width="2.2727%" height="15" fill="rgb(246,177,23)"/><text x="82.0682%" y="366.50">e..</text></g><g><title>format (logging/__init__.py:880) (1 samples, 2.27%)</title><rect x="81.8182%" y="372" width="2.2727%" height="15" fill="rgb(230,62,27)"/><text x="82.0682%" y="382.50">f..</text></g><g><title>format (logging/__init__.py:621) (1 samples, 2.27%)</title><rect x="81.8182%" y="388" width="2.2727%" height="15" fill="rgb(216,154,8)"/><text x="82.0682%" y="398.50">f..</text></g><g><title>formatTime (logging/__init__.py:557) (1 samples, 2.27%)</title><rect x="81.8182%" y="404" width="2.2727%" height="15" fill="rgb(244,35,45)"/><text x="82.0682%" y="414.50">f..</text></g><g><title>respond (cheroot/wsgi.py:142) (38 samples, 86.36%)</title><rect x="0.0000%" y="132" width="86.3636%" height="15" fill="rgb(251,115,12)"/><text x="0.2500%" y="142.50">respond (cheroot/wsgi.py:142)</text></g><g><title>__call__ (cheroot/wsgi.py:409) (38 samples, 86.36%)</title><rect x="0.0000%" y="148" width="86.3636%" height="15" fill="rgb(240,54,50)"/><text x="0.2500%" y="158.50">__call__ (cheroot/wsgi.py:409)</text></g><g><title>__call__ (flask/app.py:2309) (38 samples, 86.36%)</title><rect x="0.0000%" y="164" width="86.3636%" height="15" fill="rgb(233,84,52)"/><text x="0.2500%" y="174.50">__call__ (flask/app.py:2309)</text></g><g><title>wsgi_app (flask/app.py:2292) (38 samples, 86.36%)</title><rect x="0.0000%" y="180" width="86.3636%" height="15" fill="rgb(207,117,47)"/><text x="0.2500%" y="190.50">wsgi_app (flask/app.py:2292)</text></g><g><title>full_dispatch_request (flask/app.py:1816) (2 samples, 4.55%)</title><rect x="81.8182%" y="196" width="4.5455%" height="15" fill="rgb(249,43,39)"/><text x="82.0682%" y="206.50">full_..</text></g><g><title>finalize_request (flask/app.py:1833) (2 samples, 4.55%)</title><rect x="81.8182%" y="212" width="4.5455%" height="15" fill="rgb(209,38,44)"/><text x="82.0682%" y="222.50">final..</text></g><g><title>process_response (flask/app.py:2112) (2 samples, 4.55%)</title><rect x="81.8182%" y="228" width="4.5455%" height="15" fill="rgb(236,212,23)"/><text x="82.0682%" y="238.50">proce..</text></g><g><title>log_request (xivo/http_helpers.py:142) (2 samples, 4.55%)</title><rect x="81.8182%" y="244" width="4.5455%" height="15" fill="rgb(242,79,21)"/><text x="82.0682%" y="254.50">log_r..</text></g><g><title>_log_request (xivo/http_helpers.py:115) (2 samples, 4.55%)</title><rect x="81.8182%" y="260" width="4.5455%" height="15" fill="rgb(211,96,35)"/><text x="82.0682%" y="270.50">_log_..</text></g><g><title>info (logging/__init__.py:1383) (2 samples, 4.55%)</title><rect x="81.8182%" y="276" width="4.5455%" height="15" fill="rgb(253,215,40)"/><text x="82.0682%" y="286.50">info ..</text></g><g><title>_log (logging/__init__.py:1519) (2 samples, 4.55%)</title><rect x="81.8182%" y="292" width="4.5455%" height="15" fill="rgb(211,81,21)"/><text x="82.0682%" y="302.50">_log ..</text></g><g><title>handle (logging/__init__.py:1529) (2 samples, 4.55%)</title><rect x="81.8182%" y="308" width="4.5455%" height="15" fill="rgb(208,190,38)"/><text x="82.0682%" y="318.50">handl..</text></g><g><title>callHandlers (logging/__init__.py:1591) (2 samples, 4.55%)</title><rect x="81.8182%" y="324" width="4.5455%" height="15" fill="rgb(235,213,38)"/><text x="82.0682%" y="334.50">callH..</text></g><g><title>handle (logging/__init__.py:905) (2 samples, 4.55%)</title><rect x="81.8182%" y="340" width="4.5455%" height="15" fill="rgb(237,122,38)"/><text x="82.0682%" y="350.50">handl..</text></g><g><title>emit (logging/__init__.py:1132) (1 samples, 2.27%)</title><rect x="84.0909%" y="356" width="2.2727%" height="15" fill="rgb(244,218,35)"/><text x="84.3409%" y="366.50">e..</text></g><g><title>emit (logging/__init__.py:1038) (1 samples, 2.27%)</title><rect x="84.0909%" y="372" width="2.2727%" height="15" fill="rgb(240,68,47)"/><text x="84.3409%" y="382.50">e..</text></g><g><title>flush (logging/__init__.py:1018) (1 samples, 2.27%)</title><rect x="84.0909%" y="388" width="2.2727%" height="15" fill="rgb(210,16,53)"/><text x="84.3409%" y="398.50">f..</text></g><g><title>run (cheroot/workers/threadpool.py:112) (43 samples, 97.73%)</title><rect x="0.0000%" y="84" width="97.7273%" height="15" fill="rgb(235,124,12)"/><text x="0.2500%" y="94.50">run (cheroot/workers/threadpool.py:112)</text></g><g><title>communicate (cheroot/server.py:1252) (43 samples, 97.73%)</title><rect x="0.0000%" y="100" width="97.7273%" height="15" fill="rgb(224,169,11)"/><text x="0.2500%" y="110.50">communicate (cheroot/server.py:1252)</text></g><g><title>respond (cheroot/server.py:1056) (43 samples, 97.73%)</title><rect x="0.0000%" y="116" width="97.7273%" height="15" fill="rgb(250,166,2)"/><text x="0.2500%" y="126.50">respond (cheroot/server.py:1056)</text></g><g><title>respond (cheroot/wsgi.py:150) (5 samples, 11.36%)</title><rect x="86.3636%" y="132" width="11.3636%" height="15" fill="rgb(242,216,29)"/><text x="86.6136%" y="142.50">respond (cheroot/..</text></g><g><title>ensure_headers_sent (cheroot/server.py:1103) (5 samples, 11.36%)</title><rect x="86.3636%" y="148" width="11.3636%" height="15" fill="rgb(230,116,27)"/><text x="86.6136%" y="158.50">ensure_headers_se..</text></g><g><title>send_headers (cheroot/server.py:1188) (5 samples, 11.36%)</title><rect x="86.3636%" y="164" width="11.3636%" height="15" fill="rgb(228,99,48)"/><text x="86.6136%" y="174.50">send_headers (che..</text></g><g><title>write (cheroot/makefile.py:36) (5 samples, 11.36%)</title><rect x="86.3636%" y="180" width="11.3636%" height="15" fill="rgb(253,11,6)"/><text x="86.6136%" y="190.50">write (cheroot/ma..</text></g><g><title>_flush_unlocked (cheroot/makefile.py:45) (5 samples, 11.36%)</title><rect x="86.3636%" y="196" width="11.3636%" height="15" fill="rgb(247,143,39)"/><text x="86.6136%" y="206.50">_flush_unlocked (..</text></g><g><title>write (socket.py:607) (5 samples, 11.36%)</title><rect x="86.3636%" y="212" width="11.3636%" height="15" fill="rgb(236,97,10)"/><text x="86.6136%" y="222.50">write (socket.py:..</text></g><g><title>send (ssl.py:984) (5 samples, 11.36%)</title><rect x="86.3636%" y="228" width="11.3636%" height="15" fill="rgb(233,208,19)"/><text x="86.6136%" y="238.50">send (ssl.py:984)</text></g><g><title>all (44 samples, 100%)</title><rect x="0.0000%" y="36" width="100.0000%" height="15" fill="rgb(216,164,2)"/><text x="0.2500%" y="46.50"></text></g><g><title>_bootstrap (threading.py:885) (44 samples, 100.00%)</title><rect x="0.0000%" y="52" width="100.0000%" height="15" fill="rgb(220,129,5)"/><text x="0.2500%" y="62.50">_bootstrap (threading.py:885)</text></g><g><title>_bootstrap_inner (threading.py:917) (44 samples, 100.00%)</title><rect x="0.0000%" y="68" width="100.0000%" height="15" fill="rgb(242,17,10)"/><text x="0.2500%" y="78.50">_bootstrap_inner (threading.py:917)</text></g><g><title>run (threading.py:865) (1 samples, 2.27%)</title><rect x="97.7273%" y="84" width="2.2727%" height="15" fill="rgb(242,107,0)"/><text x="97.9773%" y="94.50">r..</text></g><g><title>_loop (wazo_auth/token.py:151) (1 samples, 2.27%)</title><rect x="97.7273%" y="100" width="2.2727%" height="15" fill="rgb(251,28,31)"/><text x="97.9773%" y="110.50">_..</text></g><g><title>_tokens_notice (wazo_auth/token.py:178) (1 samples, 2.27%)</title><rect x="97.7273%" y="116" width="2.2727%" height="15" fill="rgb(233,223,10)"/><text x="97.9773%" y="126.50">_..</text></g><g><title>get_tokens_and_session_that_expire_soon (wazo_auth/database/queries/token.py:87) (1 samples, 2.27%)</title><rect x="97.7273%" y="132" width="2.2727%" height="15" fill="rgb(215,21,27)"/><text x="97.9773%" y="142.50">g..</text></g><g><title>_get_tokens_with_expiration_less_than (wazo_auth/database/queries/token.py:103) (1 samples, 2.27%)</title><rect x="97.7273%" y="148" width="2.2727%" height="15" fill="rgb(232,23,21)"/><text x="97.9773%" y="158.50">_..</text></g><g><title>all (sqlalchemy/orm/query.py:2925) (1 samples, 2.27%)</title><rect x="97.7273%" y="164" width="2.2727%" height="15" fill="rgb(244,5,23)"/><text x="97.9773%" y="174.50">a..</text></g><g><title>__iter__ (sqlalchemy/orm/query.py:3081) (1 samples, 2.27%)</title><rect x="97.7273%" y="180" width="2.2727%" height="15" fill="rgb(226,81,46)"/><text x="97.9773%" y="190.50">_..</text></g><g><title>_execute_and_instances (sqlalchemy/orm/query.py:3106) (1 samples, 2.27%)</title><rect x="97.7273%" y="196" width="2.2727%" height="15" fill="rgb(247,70,30)"/><text x="97.9773%" y="206.50">_..</text></g><g><title>execute (sqlalchemy/engine/base.py:980) (1 samples, 2.27%)</title><rect x="97.7273%" y="212" width="2.2727%" height="15" fill="rgb(212,68,19)"/><text x="97.9773%" y="222.50">e..</text></g><g><title>_execute_on_connection (sqlalchemy/sql/elements.py:273) (1 samples, 2.27%)</title><rect x="97.7273%" y="228" width="2.2727%" height="15" fill="rgb(240,187,13)"/><text x="97.9773%" y="238.50">_..</text></g><g><title>_execute_clauseelement (sqlalchemy/engine/base.py:1099) (1 samples, 2.27%)</title><rect x="97.7273%" y="244" width="2.2727%" height="15" fill="rgb(223,113,26)"/><text x="97.9773%" y="254.50">_..</text></g><g><title>_execute_context (sqlalchemy/engine/base.py:1236) (1 samples, 2.27%)</title><rect x="97.7273%" y="260" width="2.2727%" height="15" fill="rgb(206,192,2)"/><text x="97.9773%" y="270.50">_..</text></g><g><title>do_execute (sqlalchemy/engine/default.py:536) (1 samples, 2.27%)</title><rect x="97.7273%" y="276" width="2.2727%" height="15" fill="rgb(241,108,4)"/><text x="97.9773%" y="286.50">d..</text></g></svg></svg>